<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:o="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:mui="clr-namespace:FirstFloor.ModernUI.Windows.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Button.xaml" />
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/ModernButtonStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--<DataTemplate x:Key="MessageTemplate" >
        <Grid x:Name="PART_GridMain" Tag="{Binding Path=Token}" Background="Transparent" >
            <Border Name="border" Background="#2a3345" BorderThickness="0" CornerRadius="10" Margin="10">
                <Border.Effect>
                    <DropShadowEffect ShadowDepth="0" Opacity="0.8" BlurRadius="10"/>
                </Border.Effect>
                <Grid Height="100" Width="280" Margin="6">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Image Grid.RowSpan="2" Source="{Binding Path=Icon}" Margin="4" Width="80"/>
                    <controls:ModernButton Grid.RowSpan="2" IconCode="{Binding Path=Icon}"  Style="{StaticResource ModernButtonTransparency}" IsTabStop="False" IconMargin="0"
                        IconSize="48" Width="48" Height="48" Margin="4" Foreground="White"   Background="{Binding IconBackgroundBrush}"  Cursor="Arrow"/>
                    <TextBlock Grid.Column="1" Text="{Binding Path=Title}"  TextOptions.TextRenderingMode="ClearType" TextOptions.TextFormattingMode="Display" Foreground="White" 
                               FontSize="14" FontWeight="Bold" VerticalAlignment="Center"  Margin="2,4,4,2" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" />
                    <Button x:Name="CloseButton" Grid.Column="1" Width="16" Height="16" HorizontalAlignment="Right" Margin="0,0,12,0" Style="{StaticResource GrowlNotificationCloseButton}" />
                    <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Path=Message}"  TextOptions.TextRenderingMode="ClearType" TextOptions.TextFormattingMode="Display" Foreground="White" 
                               VerticalAlignment="Center"  Margin="2,2,4,4" TextWrapping="Wrap" TextTrimming="CharacterEllipsis"/>
                </Grid>
            </Border>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SizeChanged">
                    <eica:ExInvokeCommandAction Command="{Binding SizeChangedCommand}" CommandParameter="{Binding  ElementName=NotificationWindow}"  />
                    <i:InvokeCommandAction Command="{Binding SizeChangedCommand}"  CommandParameter="{Binding  ElementName=NotificationWindow}"  />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Grid>
        <DataTemplate.Triggers>
            <EventTrigger RoutedEvent="Window.Loaded" SourceName="NotificationWindow">
                <BeginStoryboard x:Name="FadeInStoryBoard">
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="NotificationWindow" From="0.01" To="1" Storyboard.TargetProperty="Opacity" Duration="0:0:2"/>
                        <DoubleAnimation Storyboard.TargetName="NotificationWindow" From="1" To="0" Storyboard.TargetProperty="Opacity" Duration="0:0:2" BeginTime="0:0:6"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <SeekStoryboard Offset="0:0:3" BeginStoryboardName="FadeInStoryBoard" />
                    <PauseStoryboard BeginStoryboardName="FadeInStoryBoard" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <SeekStoryboard Offset="0:0:3" BeginStoryboardName="FadeInStoryBoard" />
                    <ResumeStoryboard BeginStoryboardName="FadeInStoryBoard"/>
                </Trigger.ExitActions>
            </Trigger>
            <EventTrigger RoutedEvent="Button.Click" SourceName="CloseButton">
                <BeginStoryboard>
                    <Storyboard >
                        <DoubleAnimation Storyboard.TargetName="NotificationWindow" From="1" To="0" Storyboard.TargetProperty="(Grid.Opacity)" Duration="0:0:0"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <Trigger SourceName="NotificationWindow" Property="Opacity" Value="0">
                <Setter TargetName="NotificationWindow" Property="Visibility" Value="Hidden"/>
                <Trigger.EnterActions>
                    <BeginStoryboard >
                        <Storyboard >
                            <DoubleAnimation From="100" To="0" Storyboard.TargetProperty="Height" Duration="0:0:1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate-->

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    
    <Style TargetType="mui:ModernGrowlWindow">
        <Setter Property="mui:ControlAttachProperty.ShowInTaskManager" Value="False"/>
        <Setter Property="mui:ControlAttachProperty.IgnoreAltF4" Value="True"/>
        <Setter Property="Width" Value="340" />
        <Setter Property="MaxWidth" Value="340" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ShowActivated" Value="False"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="ShowInTaskbar" Value="False"/>
        <Setter Property="Topmost" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
    </Style>

    <Style TargetType="mui:ModernGrowl">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="MinHeight" Value="60"/>
        <Setter Property="Width" Value="320"/>
        <Setter Property="Margin" Value="10,0,0,10"/>
        <Setter Property="MaxWidth" Value="320"/>
        <!--<Setter Property="hc:BorderElement.CornerRadius" Value="8"/> -->
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="mui:ModernGrowl">
                    <Grid Name="PART_GridMain" RenderTransformOrigin="0.5,0.5" Background="Transparent" UseLayoutRounding="True" SnapsToDevicePixels="True">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <TranslateTransform X="{TemplateBinding MaxWidth}"/>
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border Grid.ColumnSpan="3" Grid.RowSpan="2" Effect="{DynamicResource EffectShadow2}" Background="{TemplateBinding Background}" CornerRadius="8"/>

                        <mui:ModernButton Grid.Row="0" Grid.Column="0" IconCode="{TemplateBinding Icon}" SnapsToDevicePixels="True" UseLayoutRounding="True"  Style="{StaticResource ModernButtonGrowl}" IsTabStop="False" IconMargin="0"
                            IconSize="40" VerticalAlignment="Center" Margin="0,4,0,0" Width="48" Height="48" Foreground="{TemplateBinding IconBrush}"  />
                        
                        <StackPanel VerticalAlignment="Center" Grid.Row="0" Grid.Column="1" Margin="0,10,10,4">
                            <TextBlock Text="{TemplateBinding Message}" Style="{DynamicResource ModernGrowlTextBlockDefault}"  HorizontalAlignment="Left" TextWrapping="Wrap"/>
                            <TextBlock Visibility="{Binding ShowDateTime,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource BooleanToVisibilityConverter}}" 
                                       Text="{Binding Time,RelativeSource={RelativeSource AncestorType=mui:ModernGrowl},StringFormat=yyyy-MM-dd HH:mm:ss}" 
                                       Style="{DynamicResource ModernGrowlTextBlockDefault}"
                                       Foreground="{DynamicResource SecondaryTextBrush}" 
                                       HorizontalAlignment="Left" Margin="0,4,0,0"/>
                        </StackPanel>

                        <Button x:Name="PART_ButtonClose" Grid.Row="0" Grid.Column="2" Visibility="Collapsed"  Command="mui:ControlAttachProperty.CloseGrowlCommand"
                                Margin="11,0" Width="16" Height="16" HorizontalAlignment="Right" Style="{StaticResource ModernGrowlCloseButton}" />

                        <UniformGrid Columns="2" Name="PART_PanelMore" IsEnabled="False" Visibility="Collapsed" Grid.Row="1" Grid.ColumnSpan="3" Height="28" Grid.Column="0">
                            <mui:ModernButton Content="取消" Foreground="{DynamicResource DangerBrush}" Style="{DynamicResource ModernButtonGrowlLink}" Command="mui:ControlAttachProperty.CancelGrowlCommand"  Background="Transparent" />
                            <mui:ModernButton Content="确定" Foreground="{DynamicResource PrimaryBrush}" Style="{DynamicResource ModernButtonGrowlLink}" Command="mui:ControlAttachProperty.ConfirmGrowlCommand" Background="Transparent"  />
                        </UniformGrid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>